https://www.imooc.com/learn/443


maven介绍及环境搭建

Maven是基于项目对象模型（pom），可以通过一小段描述信息来管理项目的构建、报告和文档的软件项目管理工具

--------------------------------------------------------------------------------------

	目录结构

		src
		    -main
			-java
		    	    package
		    -test
			-java
	 		    package
		    resourse

---------------------------------------------------------------------------------------

pom

<groupId> 项目包名

<artifactId> 模块名

<version>  版本

---------------------------------------------------------------------------------------

常见指令

mvn -v 		查看maven版本

     compile  	编译

     test       测试

     package  	打包

     clean	删除target

     install  	安装jar包到本地仓库中  pom添加坐标即可


	自动创建目录

	mvn -archetype:generate		按提示进行选择

	mvn -archetype:generate -DgroupId=组织名，公司网址反写 
				-DartifactId=项目名-模块名 
				-Dversion=版本号 
				-Dpackage=代码所在包名
	
	maven中的坐标和仓库

	坐标
	    构件
	仓库
	    本地仓库和远程仓库
	镜像仓库
	    <mirror>

	更改远程仓库位置
		<settings><localRepository>

--------------------------------------------------------------------------------------

maven生命周期

clean		清理项目
	pre-clean	执行清理前的工作
	clean		清理上一次构建生成的所有文件
	post-clean	执行清理后的工作

default		构建项目
	compile  test   package   install

site		生成项目站点
	pre-site	在生成项目站点前要完成的工作
	site		生成项目的站点文档
	post-site	在生成项目站点后要完成的工作
	site-deploy	发布生成的站点到服务器上
	
--------------------------------------------------------------------------------------

pom元素

<groupId>反写的公司网址+项目名</groupId>

<artifactId>项目名+模块名</artifactId>

<version></version>
第一个0 表示大版本号
第二个0 表示分支版本号
第三个0 表示小版本号
0.0.1
snapshot快照
alpha	内部测试
beta	公测
Release	稳定
GA	正式发布

<packaging></packaging>		默认是jar    war  zip  pom

<name></name>			项目描述名

<url></url>			项目地址

<description></description>	项目描述

<dependencies>
  <dependency>
	<groupId></groupId>
	<artifaceId></artifaceId>
	<version></version>
	<type></type>
	<scope>test</scope>
	<optional></optional>	设置依赖是否可选
	<exclusions>
	  <exclusion>
	  </exclusion>
	</exclusions> 排除依赖
  </dependency>
  
  <dependencyManagement>
	<dependency></dependency>
  </dependencyManagement>

  <build>
	<plugins>		插件列表
	    <groupId></groupId>
	    <artifaceId></artifaceId>
	    <version></version>
	</plugins>
  </build>

  <parent></parent>

  <modules>
	<module></module>
  </modules>
</dependencies>

---------------------------------------------------------------------------------------






















